内部函数引用了外部函数作用域中的变量，并且这个内部函数被返回或者传递到了其他地方，
使得外部函数作用域中的变量在内部函数执行时仍然可以访问和使用。

当函数内部引用了外部函数作用域中的变量，并且这个内部函数在外部函数执行后仍然可以访问这些变量时，就形成了闭包。以下是几个闭包的例子


function createCounter() {
  let count = 0;
  return function() {
    return ++count;
  };
}

const counter = createCounter();
console.log(counter()); // 1
console.log(counter()); // 2


function delayMessage(message, delay) {
  return function() {
    setTimeout(() => {
      console.log(message);
    }, delay);
  };
}

const delayedHello = delayMessage("Hello!", 1000);
delayedHello(); // 在 1 秒后输出 "Hello!"

